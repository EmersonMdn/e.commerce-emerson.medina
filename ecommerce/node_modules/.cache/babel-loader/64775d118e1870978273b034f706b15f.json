{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\emer\\\\e.commerce-emerson.medina\\\\ecommerce\\\\src\\\\contex\\\\cartContex.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({});\nconst {\n  Provider\n} = CartContext;\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    defaultValue = [],\n    children\n  } = _ref;\n  const [cart, setCart] = useState(defaultValue);\n\n  const addToCart = (product, quantity) => {\n    if (isInCart(product.id)) {\n      const newCart = [...cart];\n\n      for (const item of newCart) {\n        if (item.id === product.id) {\n          item.count += quantity;\n        }\n      }\n\n      setCart(newCart);\n    } else {\n      setCart([...cart, {\n        item: product,\n        quantity: quantity\n      }]);\n    }\n  };\n\n  const removeFromCart = (product, quantity) => {\n    const newCart = [...cart];\n\n    for (const item of newCart) {\n      if (item.id === product.id) {\n        item.count -= quantity;\n\n        if (item.count <= 0) {\n          newCart.splice(newCart.indexOf(item), 1);\n        }\n      }\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  const isInCart = product => {\n    return cart.find(item => item.item.id === product.id);\n  };\n\n  const contex = {\n    addToCart,\n    clearCart,\n    isInCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: contex,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}; // function CartContex() {\n//     return ( <></> );\n// }\n// export default CartContex;\n\n_s(CartProvider, \"vLlX3LTQRAqI2ByLiKNwOa5dZyg=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","CartContext","Provider","CartProvider","defaultValue","children","cart","setCart","addToCart","product","quantity","isInCart","id","newCart","item","count","removeFromCart","splice","indexOf","clearCart","find","contex"],"sources":["C:/Users/Administrador/Desktop/emer/e.commerce-emerson.medina/ecommerce/src/contex/cartContex.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const CartContext = createContext({});\r\n\r\nconst {Provider} = CartContext; \r\n\r\n\r\nexport const CartProvider = ({defaultValue = [], children}) => {\r\n\r\n    const [cart, setCart] = useState(defaultValue);\r\n\r\n    const addToCart = (product, quantity) => {\r\n        \r\n        if (isInCart(product.id)){\r\n            const newCart = [...cart];\r\n            for(const item of newCart){\r\n                if(item.id === product.id){\r\n                    item.count += quantity;\r\n                }\r\n            }\r\n            setCart(newCart);\r\n\r\n        } else {\r\n            setCart(\r\n                [\r\n                    ...cart,\r\n                    {\r\n                        item: product,\r\n                        quantity: quantity\r\n                    }\r\n                ]\r\n            )\r\n        } \r\n        \r\n    }\r\n\r\n    const removeFromCart = (product, quantity) => {\r\n        const newCart = [...cart];\r\n        for(const item of newCart){\r\n            if(item.id === product.id){\r\n                item.count -= quantity;\r\n                if(item.count <= 0){\r\n                    newCart.splice(newCart.indexOf(item), 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const clearCart = () => {\r\n        setCart([]);\r\n    }\r\n\r\n    const isInCart = (product) => {\r\n        return cart.find(item => item.item.id === product.id);\r\n    }\r\n\r\n    const contex = {\r\n        addToCart,\r\n        clearCart,\r\n        isInCart,\r\n        removeFromCart\r\n    }\r\n\r\n    return (\r\n\r\n        <Provider value={contex}>\r\n            {children}\r\n        </Provider>\r\n    )\r\n}\r\n\r\n\r\n// function CartContex() {\r\n//     return ( <></> );\r\n// }\r\n\r\n// export default CartContex;"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;AAEP,MAAM;EAACG;AAAD,IAAaD,WAAnB;AAGA,OAAO,MAAME,YAAY,GAAG,QAAmC;EAAA;;EAAA,IAAlC;IAACC,YAAY,GAAG,EAAhB;IAAoBC;EAApB,CAAkC;EAE3D,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACI,YAAD,CAAhC;;EAEA,MAAMI,SAAS,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;IAErC,IAAIC,QAAQ,CAACF,OAAO,CAACG,EAAT,CAAZ,EAAyB;MACrB,MAAMC,OAAO,GAAG,CAAC,GAAGP,IAAJ,CAAhB;;MACA,KAAI,MAAMQ,IAAV,IAAkBD,OAAlB,EAA0B;QACtB,IAAGC,IAAI,CAACF,EAAL,KAAYH,OAAO,CAACG,EAAvB,EAA0B;UACtBE,IAAI,CAACC,KAAL,IAAcL,QAAd;QACH;MACJ;;MACDH,OAAO,CAACM,OAAD,CAAP;IAEH,CATD,MASO;MACHN,OAAO,CACH,CACI,GAAGD,IADP,EAEI;QACIQ,IAAI,EAAEL,OADV;QAEIC,QAAQ,EAAEA;MAFd,CAFJ,CADG,CAAP;IASH;EAEJ,CAvBD;;EAyBA,MAAMM,cAAc,GAAG,CAACP,OAAD,EAAUC,QAAV,KAAuB;IAC1C,MAAMG,OAAO,GAAG,CAAC,GAAGP,IAAJ,CAAhB;;IACA,KAAI,MAAMQ,IAAV,IAAkBD,OAAlB,EAA0B;MACtB,IAAGC,IAAI,CAACF,EAAL,KAAYH,OAAO,CAACG,EAAvB,EAA0B;QACtBE,IAAI,CAACC,KAAL,IAAcL,QAAd;;QACA,IAAGI,IAAI,CAACC,KAAL,IAAc,CAAjB,EAAmB;UACfF,OAAO,CAACI,MAAR,CAAeJ,OAAO,CAACK,OAAR,CAAgBJ,IAAhB,CAAf,EAAsC,CAAtC;QACH;MACJ;IACJ;EACJ,CAVD;;EAYA,MAAMK,SAAS,GAAG,MAAM;IACpBZ,OAAO,CAAC,EAAD,CAAP;EACH,CAFD;;EAIA,MAAMI,QAAQ,GAAIF,OAAD,IAAa;IAC1B,OAAOH,IAAI,CAACc,IAAL,CAAUN,IAAI,IAAIA,IAAI,CAACA,IAAL,CAAUF,EAAV,KAAiBH,OAAO,CAACG,EAA3C,CAAP;EACH,CAFD;;EAIA,MAAMS,MAAM,GAAG;IACXb,SADW;IAEXW,SAFW;IAGXR,QAHW;IAIXK;EAJW,CAAf;EAOA,oBAEI,QAAC,QAAD;IAAU,KAAK,EAAEK,MAAjB;IAAA,UACKhB;EADL;IAAA;IAAA;IAAA;EAAA,QAFJ;AAMH,CA9DM,C,CAiEP;AACA;AACA;AAEA;;GArEaF,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}